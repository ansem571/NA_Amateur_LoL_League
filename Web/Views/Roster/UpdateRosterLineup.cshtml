@using Domain.Enums
@using Domain.Views
@model IEnumerable<Domain.Views.DetailedSummonerInfoView>

@{
    ViewBag.Title = "Update Roster Lineup";
    var lineup = new UpdateRosterLineupView
    {
        Lineup = new List<PlayerTeamRoleView>(Model.Count())
    };
    var modelList = Model.ToList();
    var checkboxList = new List<SummonerRoleEnum>
    {
        SummonerRoleEnum.None,
        SummonerRoleEnum.Top,
        SummonerRoleEnum.Jungle,
        SummonerRoleEnum.Mid,
        SummonerRoleEnum.Adc,
        SummonerRoleEnum.Sup
    };
    var checkboxListDropdown = new List<SelectListItem>();

    foreach (var roleEnum in checkboxList)
    {
        checkboxListDropdown.Add(new SelectListItem
        {
            Text = roleEnum.ToString(),
            Value = roleEnum.ToString()
        });
    }
}

<form method="post" >
    <div class="row">
        @for (var i = 0; i < modelList.Count(); i++)
        {
            var player = modelList[i];
            var playerInLineup = lineup.Lineup[i];
            <div class="col-sm-3">
                <label>@player.SummonerName</label>
                <input type="hidden" asp-for="@playerInLineup.SummonerInfoId" />
                <select @Html.DropDownList("TeamRole", checkboxListDropdown) ) asp-for="@playerInLineup.Role"></select>
            </div>
        }
    </div>
    <button type="submit" class="btn btn-default">Save</button>
</form>

