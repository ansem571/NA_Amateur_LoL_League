@using System.Web
@model Domain.Views.FpSummonerView
@{
    ViewBag.Title = "Summoners";
}

<h2>@ViewData["Title"]</h2>
<table class="table table-bordered" @*style="color: black"*@>
    <tr>
        <th>@Html.ActionLink(string.Concat("Summoner Name ", HttpUtility.HtmlDecode("&#x21F5;")), "Index", new { sortOrder = ViewBag.SummonerName })</th>
        <th>@Html.ActionLink(string.Concat("Role ", HttpUtility.HtmlDecode("&#x21F5;")), "Index", new { sortOrder = ViewBag.Role })</th>
        @*<th><button onclick="OrderByTeamName('@registeredPlayers', 'SummonerName')">SummonerName &#x21F5;</button></th>
        <th><button onclick="OrderByTeamName('@registeredPlayers', 'Role')">Role</button></th>*@
        <th>Off Role</th>
        <th>@Html.ActionLink(string.Concat("Rank ", HttpUtility.HtmlDecode("&#x21F5;")), "Index", new { sortOrder = ViewBag.TierDivision })</th>
        <th>op.gg link</th>
        <th>@Html.ActionLink(string.Concat("Team Name ", HttpUtility.HtmlDecode("&#x21F5;")), "Index", new { sortOrder = ViewBag.TeamName })</th>
        <th>@Html.ActionLink(string.Concat("E-Sub only ", HttpUtility.HtmlDecode("&#x21F5;")), "Index", new { sortOrder = ViewBag.ESub })</th>
    </tr>
    @foreach (var item in Model.SummonerInfos)
    {
        <tr>
            <td>
                <form asp-controller="UserProfile" asp-action="PlayerProfile" method="get">
                    <input type="hidden" name="userId" value="@item.UserId" />
                    <button class="btn-link" type="submit">@item.SummonerName</button>
                </form>

            </td>
            <td>@item.Role.ToString()</td>
            <td>@item.OffRole.ToString()</td>
            <td>@item.TierDivision.ToString()</td>
            <td><a href="@item.OpGgUrl" target="_blank">@item.OpGgUrl</a></td>
            @{
                if (item.TeamName == "Unassigned")
                {
                    <td>@item.TeamName</td>
                }
                else
                {
                    <td>@Html.ActionLink(item.TeamName, "ViewRosterAsync", "Roster", new { rosterId = item.RosterId })</td>
                }
            }
            <td>@item.IsEsubOnly</td>
        </tr>
    }
</table>