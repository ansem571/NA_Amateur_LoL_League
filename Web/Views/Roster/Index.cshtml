@using System.Web
@model Domain.Views.FpSummonerView
@{
    ViewBag.Title = "Registered Summoners";
}

<h2>@ViewData["Title"]</h2>
<table class="table table-bordered">
    <tr>
        <th>@Html.ActionLink(string.Concat("Summoner Name ", HttpUtility.HtmlDecode("&#x21F5;")), "Index", new {sortOrder = ViewBag.SummonerName })</th>
        <th>@Html.ActionLink(string.Concat("Role ", HttpUtility.HtmlDecode("&#x21F5;")), "Index", new { sortOrder = ViewBag.Role })</th>
        <th>Off Role</th>
        <th>@Html.ActionLink(string.Concat("Rank ", HttpUtility.HtmlDecode("&#x21F5;")), "Index", new {sortOrder = ViewBag.TierDivision })</th>
        <th>op.gg link</th>
        <th>@Html.ActionLink(string.Concat("Team Name ", HttpUtility.HtmlDecode("&#x21F5;")), "Index", new {sortOrder = ViewBag.TeamName })</th>
    </tr>
    @foreach (var item in Model.SummonerInfos)
    {
    <tr>
        <td>@item.SummonerName</td>
        <td>@item.Role.ToString()</td>
        <td>@item.OffRole.ToString()</td>
        <td>@item.TierDivision.ToString()</td>
        <td>@item.OpGgUrl</td>
        @{
            if (item.TeamName == "Unassigned")
            {
                <td>@item.TeamName</td>
            }
            else
            {
                <td>@Html.ActionLink(item.TeamName, "ViewRosterAsync", "Roster", new {rosterId = item.RosterId})</td>
            }
        }
    </tr>
    }
</table>