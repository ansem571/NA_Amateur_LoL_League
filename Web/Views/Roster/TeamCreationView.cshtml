@using Domain.Enums
@model Dictionary<bool, List<Domain.Views.RequestedPlayersView>>
@{
    ViewBag.Title = "Team Creation";
}

<h2>@ViewData["Title"]</h2>
@if (@Model.Any())
{
    foreach (var kvp in Model)
    {
        if (kvp.Key)
        {
            <div>Ceal Academy Players</div>
        }
        if (!kvp.Key)
        {
            <div>Ceal Players</div>
        }
        var list = kvp.Value;
        <table class="table table-bordered">
            <tr>
                @{
                    var minTeamCount = 5;
                    var maxTeamSize = list.Max(x => x.Summoners.Count);
                    var teamCount = minTeamCount < maxTeamSize ? maxTeamSize : minTeamCount;

                    for (var i = 0; i < teamCount; i++)
                    {
                        var index = i + 1;
                        <th>
                            <div>

                                @if (index > minTeamCount)
                                {
                                    <div>Sub@(index - minTeamCount)</div>
                                }
                                else
                                {
                                    <div>@((SummonerRoleEnum)index)</div>
                                }
                            </div>
                        </th>
                    }
                }
                <th>Looking For</th>
            </tr>
            @foreach (var group in list)
            {
        <tr>
            @{
                var unused = new List<SummonerRoleEnum>
    {
                        SummonerRoleEnum.Top, SummonerRoleEnum.Jungle, SummonerRoleEnum.Mid, SummonerRoleEnum.Adc, SummonerRoleEnum.Sup
                    };
                for (var index = 0; index < teamCount; index++)
                {
                    if (index < group.Summoners.Count)
                    {
                        var player = group.Summoners[index] ?? null;
                        if (!string.IsNullOrEmpty(player.SummonerName))
                        {
                            <td>
                                <div>@player.SummonerName - @player.Rank</div>
                                @if (index > 4)
                                {
                                    <div> - @player.RoleForTeam</div>
                                }
                            </td>
                        }
                        else
                        {
                            <td>Unfilled</td>
                        }
                    }
                    else
                    {
                        <td>Unfilled</td>
                    }

                }
                <td>@group.LookingForString</td>
            }
        </tr>
            }
        </table>
    }
}