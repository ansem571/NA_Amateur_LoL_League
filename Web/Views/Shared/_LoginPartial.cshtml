@using DAL.Entities.UserData
@using Microsoft.AspNetCore.Identity

@inject SignInManager<UserEntity> SignInManager
@inject UserManager<UserEntity> UserManager
@inject RoleManager<UserRoleEntity> UserRoleManager
@{
    var user = await UserManager.GetUserAsync(User);
}

@if (SignInManager.IsSignedIn(User))
{
    <form asp-area="" asp-controller="Account" asp-action="Logout" method="post" id="logoutForm" class="navbar-right">
        <ul class="nav navbar-nav navbar-right">
            <li>
                <a asp-area="" asp-controller="Manage" asp-action="Index" title="Manage">My Profile</a>
            </li>
            <li>
                <a asp-area="" asp-controller="Summoner" asp-action="Index">My SummonerInfo</a>
            </li>

            <li>
                <a asp-area="" asp-controller="Account" asp-action="RegisterForSeason">Register For Season</a>
            </li>

            <li>
                <button type="submit" class="btn btn-link navbar-btn navbar-link">Log out</button>
            </li>
            @{
                if (await UserManager.IsInRoleAsync(user, "Admin"))
                {
                    <li>
                        <a asp-area="" asp-controller="Admin" asp-action="Index" title="Admin">Admin Console</a>
                    </li>
                }
            }
        </ul>
    </form>
}
else
{
    <ul class="nav navbar-nav navbar-right">
        <li><a asp-area="" asp-controller="Account" asp-action="Register">Register</a></li>
        <li><a asp-area="" asp-controller="Account" asp-action="Login">Log in</a></li>
    </ul>
}
